package Panel;

import Model.Departamento;
import Model.Estudiante;
import Model.Persona;
import Model.Profesor;
import Repository.PersonaImpl;
import Repository.Repository;
import Repository.Consultas;
import Repository.DepartamentoImpl;
import Repository.EstudianteImpl;
import Repository.ProfesorImpl;
import java.util.List;
import javax.swing.JOptionPane;

/**
 * @Julián
 */
public class AdministrarRoles extends javax.swing.JPanel {
    
    private static final Repository repositoryE= new EstudianteImpl();
    private static final Repository personaRepository= new PersonaImpl();
    private static final Repository profesorRepository=new ProfesorImpl();
    private static final Repository departamentoRepository= new DepartamentoImpl();
    
    public AdministrarRoles() {
        initComponents();
        
        setSize(1000, 600); // Tamaño mediano
        jifDatosPersonas.setTitle("Datos del usuario.");
//        jcbCiudades.addItem();
        
//        Color colorTranslucido = new Color(255, 255, 255, 128);
//        jTextField2.setBackground(colorTranslucido);
        jtfCodigo.setVisible(true);
        jbActualizar.setVisible(false);
        jifDatosPersonas.setVisible(false);
        jcbDepartamentos.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcbDepartamentos = new javax.swing.JComboBox<>();
        jtfCodigo = new javax.swing.JTextField();
        jbActualizar = new javax.swing.JButton();
        jbRegistrar = new javax.swing.JButton();
        jcbFuncion = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jifDatosPersonas = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jlNombre = new javax.swing.JLabel();
        jlApellido = new javax.swing.JLabel();
        jlTelefono = new javax.swing.JLabel();
        jlCiudad = new javax.swing.JLabel();
        jlTipoId = new javax.swing.JLabel();
        jlGenero = new javax.swing.JLabel();
        jlIdentificacion = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jlRol = new javax.swing.JLabel();
        jlTipoDireccion = new javax.swing.JLabel();
        jlNumeroDireccion = new javax.swing.JLabel();
        jcbSeleccion = new javax.swing.JComboBox<>();

        setOpaque(false);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcbDepartamentos.setBackground(new java.awt.Color(166, 181, 167));
        jcbDepartamentos.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jcbDepartamentos.setForeground(new java.awt.Color(0, 0, 1));
        jcbDepartamentos.setMaximumRowCount(5);
        jcbDepartamentos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)), "Departamentos Disponibles", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 14), new java.awt.Color(0, 0, 1))); // NOI18N
        jcbDepartamentos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jcbDepartamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbDepartamentosActionPerformed(evt);
            }
        });
        add(jcbDepartamentos, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, 220, 40));

        jtfCodigo.setBackground(new java.awt.Color(166, 181, 167));
        jtfCodigo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtfCodigo.setForeground(new java.awt.Color(0, 0, 1));
        jtfCodigo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(255, 255, 255)), "Codigo Usuario", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jtfCodigo.setOpaque(true);
        jtfCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodigoActionPerformed(evt);
            }
        });
        jtfCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfCodigoKeyReleased(evt);
            }
        });
        add(jtfCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 50, 140, -1));

        jbActualizar.setBackground(new java.awt.Color(166, 181, 167));
        jbActualizar.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jbActualizar.setForeground(new java.awt.Color(255, 255, 254));
        jbActualizar.setText("Actualizar");
        jbActualizar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarActionPerformed(evt);
            }
        });
        add(jbActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 120, 100, 30));

        jbRegistrar.setBackground(new java.awt.Color(166, 181, 167));
        jbRegistrar.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jbRegistrar.setForeground(new java.awt.Color(255, 255, 254));
        jbRegistrar.setText("Registrar");
        jbRegistrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbRegistrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRegistrarActionPerformed(evt);
            }
        });
        add(jbRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 120, 100, 30));

        jcbFuncion.setBackground(new java.awt.Color(166, 181, 167));
        jcbFuncion.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jcbFuncion.setForeground(new java.awt.Color(0, 0, 1));
        jcbFuncion.setMaximumRowCount(5);
        jcbFuncion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Estudiante", "Profesor" }));
        jcbFuncion.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(255, 255, 255)), "Función", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jcbFuncion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jcbFuncion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFuncionActionPerformed(evt);
            }
        });
        add(jcbFuncion, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 40, 140, 50));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel2.setText("Profesores o Estudiantes.");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 310, 290, 40));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel3.setText("Aquí podrá modificar las funciones");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, 290, 40));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel4.setText("Digite un codigo de usuario para asignar");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, 340, 40));

        jifDatosPersonas.setTitle("Datos del usuario.");
        jifDatosPersonas.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jifDatosPersonas.setVisible(true);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel1.setText("Telefono:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel5.setText("Nombre:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel6.setText("Apellido:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel7.setText("Dirección:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel8.setText("Ciudad:");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel9.setText("Tipo id:");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel10.setText("Identificación:");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel11.setText("Genero:");

        jlNombre.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNombre.setText("No tiene nombre");

        jlApellido.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlApellido.setText("No tiene apellido");

        jlTelefono.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlTelefono.setText("No tiene telefono");

        jlCiudad.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlCiudad.setText("No tiene ciudad");

        jlTipoId.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlTipoId.setText("No tiene id");

        jlGenero.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlGenero.setText("No tiene genero");

        jlIdentificacion.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlIdentificacion.setText("No tiene id");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel12.setText("Funciones:");

        jlRol.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlRol.setText("No hace nada");

        jlTipoDireccion.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlTipoDireccion.setText("No tiene dirección");

        jlNumeroDireccion.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        javax.swing.GroupLayout jifDatosPersonasLayout = new javax.swing.GroupLayout(jifDatosPersonas.getContentPane());
        jifDatosPersonas.getContentPane().setLayout(jifDatosPersonasLayout);
        jifDatosPersonasLayout.setHorizontalGroup(
            jifDatosPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jifDatosPersonasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jifDatosPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jifDatosPersonasLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jifDatosPersonasLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jifDatosPersonasLayout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jifDatosPersonasLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jlTipoDireccion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlNumeroDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jifDatosPersonasLayout.createSequentialGroup()
                        .addGroup(jifDatosPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jifDatosPersonasLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jlTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jifDatosPersonasLayout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jlTipoId, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jifDatosPersonasLayout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jifDatosPersonasLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jlApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jifDatosPersonasLayout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jlRol, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jifDatosPersonasLayout.setVerticalGroup(
            jifDatosPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jifDatosPersonasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jifDatosPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jifDatosPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jifDatosPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jifDatosPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jifDatosPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlTipoDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlNumeroDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jifDatosPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlTipoId, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jifDatosPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jifDatosPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jifDatosPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlRol, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        add(jifDatosPersonas, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 200, 360, 310));

        jcbSeleccion.setBackground(new java.awt.Color(166, 181, 167));
        jcbSeleccion.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jcbSeleccion.setForeground(new java.awt.Color(0, 0, 1));
        jcbSeleccion.setMaximumRowCount(5);
        jcbSeleccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Asignar", "Eliminar" }));
        jcbSeleccion.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)), "Que desea hacer?", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 14), new java.awt.Color(0, 0, 1))); // NOI18N
        jcbSeleccion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jcbSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSeleccionActionPerformed(evt);
            }
        });
        add(jcbSeleccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 120, 140, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void lecturaModal(){
        if (jtfCodigo.getText().isEmpty()) {
            jifDatosPersonas.setVisible(false);
        }
        Persona p= null;
        Estudiante e=null;
        Profesor pr=null;
        int codigo = Integer.parseInt(jtfCodigo.getText());
        p=(Persona) personaRepository.porCodigo(codigo);
        e=(Estudiante) repositoryE.porCodigo(codigo);
        pr=(Profesor) profesorRepository.porCodigo(codigo);
        
        if(p!=null){
            jifDatosPersonas.setVisible(true);
            jlNombre.setText(p.getNombre());
            jlApellido.setText(p.getApellido());
            jlCiudad.setText(String.valueOf(p.getDireccion().getCiudad().getCiudad_nombre()));
            jlTipoDireccion.setText(p.getDireccion().getTipo());
            jlNumeroDireccion.setText(p.getDireccion().getNumero());
            jlTelefono.setText(p.getTelefono());
            jlTipoId.setText(p.getTipo_documento());
            jlIdentificacion.setText(String.valueOf(p.getNumero_documento()));
            jlGenero.setText(p.getGenero());
            if(e!=null && pr!=null){
                jlRol.setText("Estudiante y Profesor");
            }else if(e!=null){
                jlRol.setText("Estudiante");
            }else if(pr!=null){
                jlRol.setText("Profesor");
            }else{
                jlRol.setText("Sin función asignada");
            }
        }else{
            JOptionPane.showMessageDialog(null, "No se encontró el usuario");
        }
    }
    
    private Estudiante datosEstudiante(){
//        EstudianteImpl eimpl=new EstudianteImpl();
        Estudiante e=new Estudiante();
        boolean personaEncontrada=false,estudianteEncontrado=false;
        int id_estudiante=0;
        int codigoPersona=Integer.parseInt(jtfCodigo.getText());
        List<Persona> personas=personaRepository.listar();
        for(Persona persona:personas){
            if(persona.getId()==codigoPersona){
                e.setId(persona.getId());
                personaEncontrada=true;
                break;
            }
        }
        List<Estudiante> estudiantes=repositoryE.listar();
        for(Estudiante es:estudiantes){
            if(es.getId()==codigoPersona){
                estudianteEncontrado=true;
                id_estudiante=es.getEstudiante_id();
                break;
            }else{
                id_estudiante=es.getEstudiante_id();
            }
        }
        if(!estudianteEncontrado){
            id_estudiante++;
        }
        if(!personaEncontrada){
            JOptionPane.showMessageDialog(null, "no se encontró esa persona.");
        }
        e.setEstudiante_id(id_estudiante);
        
        return e;
    }
    
    private Profesor datosProfesor(){
        Profesor p=new Profesor();
        List<Departamento> listaDepartamentos=departamentoRepository.listar();
        int codigoPersona=Integer.parseInt(jtfCodigo.getText());
        int codigoDepartamento=0;
        
        String departamentoSeleccionado=(String) jcbDepartamentos.getSelectedItem();
        for(Departamento departamento:listaDepartamentos){
            if(departamento.getDepartamento_nombre().equals(departamentoSeleccionado)){
                codigoDepartamento=departamento.getDepartamento_id();
            }
        }
        
        p.setDepartamento_id(codigoDepartamento);
        p.setPersona_id(codigoPersona);
        
        return p;
    }
    
    private void jbActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarActionPerformed
        // TODO add your handling code here:
        String seleccion=(String)jcbFuncion.getSelectedItem();
        int codigoPersona=Integer.parseInt(jtfCodigo.getText());
        if(seleccion.equals("Estudiante")){
            repositoryE.eliminar(codigoPersona);
        }else if(seleccion.equals("Profesor")){
            profesorRepository.eliminar(codigoPersona);
        }
        lecturaModal();
        JOptionPane.showMessageDialog(null, "Persona modificada en el sistema.");
    }//GEN-LAST:event_jbActualizarActionPerformed

    private void jbRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRegistrarActionPerformed
        
        
        String seleccion=(String)jcbFuncion.getSelectedItem();
        if(seleccion.equals("Estudiante")){
            repositoryE.guardar(datosEstudiante());
            lecturaModal();
            JOptionPane.showMessageDialog(null, "Datos guardados");
        }else if(seleccion.equals("Profesor")){
            profesorRepository.guardar(datosProfesor());
            lecturaModal();
            JOptionPane.showMessageDialog(null, "Datos guardados");
        }
        
    }//GEN-LAST:event_jbRegistrarActionPerformed

    private void jtfCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodigoActionPerformed

    private void jcbDepartamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbDepartamentosActionPerformed
        // TODO add your handling code here:
        String seleccion=(String)jcbDepartamentos.getSelectedItem();
        if(seleccion.equals("Asignar")){
            jbActualizar.setVisible(false);
            jbRegistrar.setVisible(true);
        }else if(seleccion.equals("Eliminar")){
            jbActualizar.setVisible(true);
            jbRegistrar.setVisible(false);
        }
    }//GEN-LAST:event_jcbDepartamentosActionPerformed

    private void jtfCodigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoKeyReleased
        
        lecturaModal();
        
    }//GEN-LAST:event_jtfCodigoKeyReleased

    private void jcbSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSeleccionActionPerformed
        // TODO add your handling code here:
        String seleccion=(String) jcbSeleccion.getSelectedItem();
        if(seleccion.equals("Asignar")){
            jbActualizar.setVisible(false);
            jbRegistrar.setVisible(true);
        }else if(seleccion.equals("Eliminar")){
            jbRegistrar.setVisible(false);
            jbActualizar.setVisible(true);
        }
    }//GEN-LAST:event_jcbSeleccionActionPerformed

    private void jcbFuncionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFuncionActionPerformed
        // TODO add your handling code here:
        String seleccion=(String)jcbFuncion.getSelectedItem();
        if(seleccion.equals("Estudiante")){
            jcbDepartamentos.setVisible(false);
        }else if(seleccion.equals("Profesor")){
            List<Departamento> listaDepartamentos=departamentoRepository.listar();
            for (Departamento departamento : listaDepartamentos) {
                jcbDepartamentos.addItem(departamento.getDepartamento_nombre());
            }
            jcbDepartamentos.setVisible(true);
        }
    }//GEN-LAST:event_jcbFuncionActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jbActualizar;
    private javax.swing.JButton jbRegistrar;
    private javax.swing.JComboBox<String> jcbDepartamentos;
    private javax.swing.JComboBox<String> jcbFuncion;
    private javax.swing.JComboBox<String> jcbSeleccion;
    private javax.swing.JInternalFrame jifDatosPersonas;
    private javax.swing.JLabel jlApellido;
    private javax.swing.JLabel jlCiudad;
    private javax.swing.JLabel jlGenero;
    private javax.swing.JLabel jlIdentificacion;
    private javax.swing.JLabel jlNombre;
    private javax.swing.JLabel jlNumeroDireccion;
    private javax.swing.JLabel jlRol;
    private javax.swing.JLabel jlTelefono;
    private javax.swing.JLabel jlTipoDireccion;
    private javax.swing.JLabel jlTipoId;
    private javax.swing.JTextField jtfCodigo;
    // End of variables declaration//GEN-END:variables
}
